1)
CREATE TABLE HotelStays
(roomNum INTEGER NOT NULL,
arrDate DATE NOT NULL,
depDate DATE NOT NULL,
guestName CHAR(30) NOT NULL,
PRIMARY KEY (roomNum, arrDate),
CHECK (arrDate<depDate));


CREATE OR REPLACE FUNCTION Room() 
returns trigger language plpgsql as $$ 
BEGIN IF EXISTS (select 1 from HotelStays where roomNum=NEW.roomNum and depDate>NEW.arrDate) THEN RAISE EXCEPTION 'Insert Not Possible';
END IF;
RETURN NEW; 
END $$;


CREATE TRIGGER hotel_insert
BEFORE INSERT ON HotelStays
FOR EACH ROW EXECUTE PROCEDURE Room();



INSERT INTO HotelStays(roomNum, arrDate, depDate, guestName)
VALUES 
(123, to_date('20160202', 'YYYYMMDD'), to_date('20160206','YYYYMMDD'), 'A');

INSERT INTO HotelStays(roomNum, arrDate, depDate, guestName)
VALUES 
(123, to_date('20160204', 'YYYYMMDD'), to_date('20160208','YYYYMMDD'), 'B');

----------------------------------------------------------------------


2)
CREATE TABLE Course
(sid INTEGER NOT NULL,
classname varchar NOT NULL,
grade varchar NOT NULL);

insert into Course values
(123,'ART123','A'),
(123,'BUS456','B'),
(666,'REL100','D'),
(666,'ECO966','A'),
(666,'BUS456','B'),
(345,'BUS456','A'),
(345,'ECO966','F')
;

create view Course_View as select classname, count(classname) as total from Course group by classname order by total;

select * from Course_View;

-----------------------------------------------------------------------
3)
CREATE TABLE Project
(projectid varchar NOT NULL,
step integer NOT NULL,
status varchar NOT NULL);


insert into Project values
('P100',0,'C'),
('P100',1,'W'),
('P100',2,'W'),
('P201',0,'C'),
('P201',1,'C'),
('P333',0,'W'),
('P333',1,'W'),
('P333',2,'W'),
('P333',3,'W')
;

select projectid from Project where step =0 and status='C' EXCEPT select projectid from Project where step>0 and status='C';

-----------------------------------------------------------------------
4)
CREATE TABLE People
(name varchar NOT NULL,
address varchar NOT NULL,
id integer NOT NULL,
samefam integer );

insert into People values
('Alice','A',10,NULL),
('Bob','B',15,NULL),
('Carmen','C',22,NULL),
('Diego','A',9,10),
('Ella','B',3,15),
('Farkhad','D',11,NULL)
;

delete from People where samefam is NULL and id in (select samefam from People);

-------------------------------------------------------------------

5)

CREATE TABLE Food
(chef varchar NOT NULL,
dish varchar NOT NULL
);

insert into Food values
('A','Mint chocolate brownie'),
('B','Upside down pineapple cake'),
('B','Creme brulee'),
('B','Mint chocolate brownie'),
('C','Upside down pineapple cake'),
('C','Creme brulee'),
('D','Apple pie'),
('D','Upside down pineapple cake'),
('D','Creme brulee'),
('E','Apple pie'),
('E','Upside down pineapple cake'),
('E','Creme brulee'),
('E','Bananas Foster')
;


CREATE TABLE Food_Dish
(
items varchar NOT NULL
);

insert into Food_Dish values
('Apple pie'),
('Upside down pineapple cake'),
('Creme brulee')
;

select chef from Food where dish in (select items from Food_Dish) group by chef having count(chef) = (select count(distinct (items)) from Food_Dish);


SELECT A.chef FROM Food A INNER JOIN Food_Dish B on A.dish = B.items group by chef having count(distinct(dish)) = (select count(distinct(items)) from Food_Dish);

select chef from Food f where exists (select 1 from Food_Dish fd where f.dish=fd.items) group by chef having count(chef) = (select count(distinct(items)) from Food_Dish); 

----------------------------------------------------------------------









